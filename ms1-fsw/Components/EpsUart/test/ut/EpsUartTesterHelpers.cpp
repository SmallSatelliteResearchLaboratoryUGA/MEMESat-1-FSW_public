// ======================================================================
// \title  EpsUartTesterHelpers.cpp
// \author Generated by fpp-to-cpp
// \brief  cpp file for EpsUart component test harness helper functions
// ======================================================================

#include "EpsUartTester.hpp"

namespace EpsModule {

// ----------------------------------------------------------------------
// Helper functions
// ----------------------------------------------------------------------

void EpsUartTester ::connectPorts() {
  // Connect special input ports

  this->connect_to_cmdIn(0, this->component.get_cmdIn_InputPort(0));

  // Connect special output ports

  this->component.set_cmdRegOut_OutputPort(0, this->get_from_cmdRegOut(0));

  this->component.set_cmdResponseOut_OutputPort(
      0, this->get_from_cmdResponseOut(0));

  this->component.set_eventOut_OutputPort(0, this->get_from_eventOut(0));

  this->component.set_logTextOut_OutputPort(0, this->get_from_logTextOut(0));

  this->component.set_timeCaller_OutputPort(0, this->get_from_timeCaller(0));

  this->component.set_tlmOut_OutputPort(0, this->get_from_tlmOut(0));

  // Connect typed input ports

  this->connect_to_ExternCommandBuffer(
      0, this->component.get_ExternCommandBuffer_InputPort(0));

  this->connect_to_UartRead(0, this->component.get_UartRead_InputPort(0));

  // Connect typed output ports

  this->component.set_ChangeState_OutputPort(0, this->get_from_ChangeState(0));

  this->component.set_RequestState_OutputPort(0,
                                              this->get_from_RequestState(0));

  this->component.set_SM_CommandBuffer_OutputPort(
      0, this->get_from_SM_CommandBuffer(0));

  this->component.set_UartBuffers_OutputPort(0, this->get_from_UartBuffers(0));

  this->component.set_UartWrite_OutputPort(0, this->get_from_UartWrite(0));
}

void EpsUartTester ::initComponents() {
  this->init();
  this->component.init(EpsUartTester::TEST_INSTANCE_QUEUE_DEPTH,
                       EpsUartTester::TEST_INSTANCE_ID);
}

} // namespace EpsModule
