// ======================================================================
// \title  TlmChanWrapperTesterHelpers.cpp
// \author Generated by fpp-to-cpp
// \brief  cpp file for TlmChanWrapper component test harness helper functions
// ======================================================================

#include "TlmChanWrapperTester.hpp"

namespace TlmChanModule {

// ----------------------------------------------------------------------
// Helper functions
// ----------------------------------------------------------------------

void TlmChanWrapperTester ::connectPorts() {
  // Connect special input ports

  this->connect_to_cmdIn(0, this->component.get_cmdIn_InputPort(0));

  // Connect special output ports

  this->component.set_cmdRegOut_OutputPort(0, this->get_from_cmdRegOut(0));

  this->component.set_cmdResponseOut_OutputPort(
      0, this->get_from_cmdResponseOut(0));

  this->component.set_eventOut_OutputPort(0, this->get_from_eventOut(0));

  this->component.set_paramGet_OutputPort(0, this->get_from_paramGet(0));

  this->component.set_paramSet_OutputPort(0, this->get_from_paramSet(0));

  this->component.set_textEventOut_OutputPort(0,
                                              this->get_from_textEventOut(0));

  this->component.set_timeGetOut_OutputPort(0, this->get_from_timeGetOut(0));

  this->component.set_tlmOut_OutputPort(0, this->get_from_tlmOut(0));

  // Connect typed input ports

  this->connect_to_scheduledHandler(
      0, this->component.get_scheduledHandler_InputPort(0));

  // Connect typed output ports

  this->component.set_sendSchedule_OutputPort(0,
                                              this->get_from_sendSchedule(0));

  this->component.set_tlmChanOut_OutputPort(0, this->get_from_tlmChanOut(0));
}

void TlmChanWrapperTester ::initComponents() {
  this->init();
  this->component.init(TlmChanWrapperTester::TEST_INSTANCE_QUEUE_DEPTH,
                       TlmChanWrapperTester::TEST_INSTANCE_ID);
}

} // namespace TlmChanModule
