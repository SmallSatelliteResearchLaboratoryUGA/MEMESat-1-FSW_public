// ======================================================================
// \title  OTAUpdaterTesterHelpers.cpp
// \author Generated by fpp-to-cpp
// \brief  cpp file for OTAUpdater component test harness helper functions
// ======================================================================

#include "OTAUpdaterTester.hpp"

namespace UpdaterModule {

// ----------------------------------------------------------------------
// Helper functions
// ----------------------------------------------------------------------

void OTAUpdaterTester ::connectPorts() {
  // Connect special input ports

  this->connect_to_cmdIn(0, this->component.get_cmdIn_InputPort(0));

  // Connect special output ports

  this->component.set_cmdRegOut_OutputPort(0, this->get_from_cmdRegOut(0));

  this->component.set_cmdResponseOut_OutputPort(
      0, this->get_from_cmdResponseOut(0));

  this->component.set_eventOut_OutputPort(0, this->get_from_eventOut(0));

  this->component.set_paramGetOut_OutputPort(0, this->get_from_paramGetOut(0));

  this->component.set_paramSetOut_OutputPort(0, this->get_from_paramSetOut(0));

  this->component.set_textEventOut_OutputPort(0,
                                              this->get_from_textEventOut(0));

  this->component.set_timeCaller_OutputPort(0, this->get_from_timeCaller(0));

  this->component.set_tlmOut_OutputPort(0, this->get_from_tlmOut(0));

  // Connect typed input ports

  this->connect_to_readyForPowerOff(
      0, this->component.get_readyForPowerOff_InputPort(0));

  this->connect_to_scheduledHandler(
      0, this->component.get_scheduledHandler_InputPort(0));

  this->connect_to_updaterOpIn(0, this->component.get_updaterOpIn_InputPort(0));

  // Connect typed output ports

  this->component.set_cleanupDataPath_OutputPort(
      0, this->get_from_cleanupDataPath(0));

  for (FwIndexType i = 0; i < 2; i++) {
    this->component.set_gpioWrite_OutputPort(i, this->get_from_gpioWrite(i));
  }

  this->component.set_sendSchedule_OutputPort(0,
                                              this->get_from_sendSchedule(0));
}

void OTAUpdaterTester ::initComponents() {
  this->init();
  this->component.init(OTAUpdaterTester::TEST_INSTANCE_QUEUE_DEPTH,
                       OTAUpdaterTester::TEST_INSTANCE_ID);
}

} // namespace UpdaterModule
